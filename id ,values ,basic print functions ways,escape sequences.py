# -*- coding: utf-8 -*-
"""Untitled72.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OR4meUvi2snLHDUXe5Naf1ReNPwn59sa

DATA TYPES

variables

Variables are just containers that hold a value. In python all variables are objects of some predefined or user defined class.
"""

x=5
type(x)

y=5.5
type(y)

z='jagan'
type(z)

"""In python the interpreter automatically determines the datatype of the variable. Python also allows multiple assignment.![alt text](alt text)"""

x=y=z=1
print(x,y,z)

"""In python a varible consists of 3 important parts

1. ID
2. VALUE
3. TYPE

id gives of the address

same variables and different variables doesnt matter but value checking then will get address
"""

a=10

print(type(a),id(a))

a=15
print(id(a))

a=20
print(id(a))

b=10
print(type(b),id(b))

c=10
print(type(c),id(c))

print(id(a))
print(id(b))



"""different variables gives the same address"""

c=10
d=10
print(id(c))
print(id(d))
print(id(c)==id(d))

"""same varibles gives the sme address"""

c=10
c=120
print(id(c))
print(id(c))
print(id(c)==id(c))

m=10
m=23
print(id(m),id(m))

"""str in id"""

name='jagan'
name1='jagan'
list=['joseph','thontla','Jagan','Jagan']
print(id(name))
print(id(name1))
print(id(name)==id(name1))


print(id(list[0]))
print(id(list[2]))
print(id(list[3]))
print(id(list[0]==id(list[3])))

print(id(list[2])==id(list[3]))

# This program shows various identities
str1 = "geek"
print(id(str1))

str2 = "geek"
print(id(str2))

# This will return True
print(id(str1) == id(str2))

# Use in Lists
list1 = ["aakash", "priya", "abdul"]
print(id(list1[0]))
print(id(list1[2]))

# This returns false
print(id(list1[0])==id(list1[2]))

"""dict in id

same values write dowm on reverse way will get different address

one add vales in the set1,stet2,will be different


In Python, sets are mutable, and their id can change if they are modified. If you modify a set, even if the contents remain the same, Python may allocate a new memory space for the set. This is why the id() values for set1 and set3 are different in your case.
"""

set1={1,2,3}
set2={3,2,1}
set3={1,2,3}
print(id(set1))
print(id(set2))
print(id(set3))

set4={1,2,3}
set5={3,2,1,4}
print(id(set3))
print(id(set4))

"""
If you have two tuples with the same values, and their memory addresses are different, it could be due to the fact that tuples are immutable in Python. When you create a new tuple with the same values, Python may allocate a new memory space for it, even though the values are the same."""

tuple3=(1,2,3)
tuple1=(3,2,1)
tuple2=(1,2,3)
print(id(tuple3))
print(id(tuple1))
print(id(tuple2))

tuple1 = ('jagan', 2, 3)
tuple2 = (3, 2, 1)
tuple3 = ('jagan', 2, 3)

print(id(tuple1)) # Output: <id1>
print(id(tuple2)) # Output: <id2>
print(id(tuple3)) # Output: <id3>

tuple1 = (1, 2, 3)
tuple3 = (1, 2, 3)

# Print the identity (id) of each tuple
print(id(tuple1))
print(id(tuple3))

set1 = {1, 2, 3}
set3 = {1, 2, 3}

# Convert sets to frozensets
frozenset1 = frozenset(set1)
frozenset3 = frozenset(set3)

# Print the id of frozensets
print(id(frozenset1))
print(id(frozenset3))

jagan=10
print(jagan)

type(jagan)

del jagan

"""because of memory will be delted we cant view it"""

jagan

"""Using the print() Function:
The most common way to print in Python is by using the print() function.
"""

print("jagan")

print("jagan1")

"""Formatted String Literals (f-strings):
Introduced in Python 3.6, f-strings provide a concise way to embed expressions inside string literals.
"""

name='jagan'
age=25
print(f"here the person {name} at the same time {age}")

name='jagan'
age=25
college="ciet"
print(f"here the person {name} at the same time {age} and every person studied in {college}")

"""Multiple Arguments with print():
The print() function allows multiple arguments, separated by commas. It automatically adds a space between the items.
"""

str1='jagan'
str3=20
print("str1:", str1,"str3:",str3)

"""Using str.format():
Another older formatting method using the str.format() method.
"""

fruit1 = "apple"
fruit2 = "orange"
print("I like {} and {}.".format(fruit1, fruit2))

name1='sai'
name2='rakesh'
print(" l miss gusy {} and {}".format(name1,name2))

"""ways to print function i think ways real life

1.print function

2.f_strings

3.mutiple arguments

4..format()

example for the above operations
"""

print("jagan")
city="pune"
age=45
print(f"here the person and he is satying {city} after that the he is eligiable for the {age}")
name='something'
name1='nothing'
print("name:",name,"name1",name1)
f1='love'
f2='hate'
print("today more focus on {} and {} around the world".format(f1,f2))

"""Numbers
Python supports 4 types of numbers :-

INT
FLOAT
LONG
COMPLEX
"""

a=10
b=20.5,
c=1+2j
print(type(a),type(b),type(c),sep='\n')

print("__________________")
print(id(a),id(b),id(c),sep='\n')

a=10
b=20.5
c=1+2j
print(a,b,c,sep="-")
print(a,b,c,sep="_")
print(a,b,c,sep="+")
print(a,b,c,sep=',')
print(a,b,c,sep='\n')
print(a,b,c,sep='\t') #here tab space

"""escape sequences"""

print("hello\n world") #\n new line
print("hello\n\nworld") #n is two two sssskip two lines
print("hello\ttworld") #t is one tabspace #tt two tabspace
print("hello\rworld",)# r is the hello
print("hello\bworld") #b is
print("hello   \bworld") #here three spaces  just remove only space
print('hello   \b\b\b\b') #this actually that space only we are giving four \b then remove only letter
print("hello world:\\") #\\
print("hello\\world")
print("hello world and 'love you'") #single quotes string
print('heolow orld guys" think complicated problem only use iq levels"') #double quotes string

"""to print("hello world")"""

print("jagan")
print('print("hello wolrd")')

"""basic contentation"""

print("hello"+"world")

"""some spaces needed over here

1.first
"""

print("hello "+"world")

"""2.second
here hello inside space and world before space
"""

print("hello "+" world")

"""there is no space in between
"" quote also treated string
"""

print("jagan"+ "" +"jagan")

print("jagan"+ "     " +"jagan")

print("hello"+" "+input("what is your name"))

print("hello"+" "+input("what is your name")+","+"how are you")