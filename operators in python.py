# -*- coding: utf-8 -*-
"""Untitled74.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F0HmerofoDwqHtpbvK9Yr1Nt45PMR6hp
"""

first_name = 'Asabeneh'
last_name = 'Yetayeh'
country = 'Finland'
city = 'Helsinki'
age = 250
is_married = True
skills = ['HTML', 'CSS', 'JS', 'React', 'Python']
person_info = {
    'firstname':'Asabeneh',
    'lastname':'Yetayeh',
    'country':'Finland',
    'city':'Helsinki'
    }

# Printing the values stored in the variables

print('First name:', first_name)
print('First name length:', len(first_name))
print('Last name: ', last_name)
print('Last name length: ', len(last_name))
print('Country: ', country)
print('City: ', city)
print('Age: ', age)
print('Married: ', is_married)
print('Skills: ', skills)
print('Person information: ', person_info)

# Declaring multiple variables in one line

first_name, last_name, country, age, is_married = 'Asabeneh', 'Yetayeh', 'Helsink', 250, True

print(first_name, last_name, country, age, is_married)
print('First name:', first_name)
print('Last name: ', last_name)
print('Country: ', country)
print('Age: ', age)
print('Married: ', is_married)

print(first_name[0])

"""mutiple variables and assiging values to the variables in one"""

x,y,z,a,b,c='jagan',2,4,'raghav',5.00,3
print(x,y,z,a,b,c)
print("value of a:", a)
print("value of b:", b)
print("value of c:", c)
print("value of x:", x)
print("value of x:", y)
print("value of x:", z)

people_info={
    'name':'rakesh',
    'age':40,
    'city':'ypalem',
    'collge':'nec',
    'branch':'cse'

}
print("people_info:",people_info)

"""Getting user input using the input() built-in function. Let us assign the data we get from a user into first_name and age variables. Example:"""

user=input('enter name_')
print(user)

"""floats and complex numbers"""

print('Floating Point Number, PI', 3.14)
print('Floating Point Number, gravity', 9.81)


# Floating numbers
print('Floating Point Number, PI', 3.14)
print('Floating Point Number, gravity', 9.81)


# Complex numbers
print('Complex number: ', 1 + 1j)
print('Multiplying complex numbers: ',(1 + 1j) * (1 - 1j))

a=10
print("way of the printed is:",43)
print("way of printed us :",a)

"""
Arithmetic Operators:

Addition(+): a + b:returs int

Subtraction(-): a - b:return

Multiplication(*): a * b

Division(/): a / b

Modulus(%): a % b

Floor division(//): a // b

Exponentiation(**): a ** b
"""

#basic examples
a,b=20,5
c=a+b
print("value of c:",c)
print("print the addition of two number:",a+b)
print("print the multiplication of two number:",a*b)
print("printed the sub of two numbers:",a-b)
print("divison of two variables:",a/b)  #here a and b values of 20,5 quotient 4 gives that in the form 4.0
print("mouduls of two number",a%b) #there a and b values of 20,5 remainder is 0
print("floor division:",a//b) #here a and b values of 20,5 quotient 4 gives that not in the form flaot like 4,5,6

"""user input

whnever you divide with variables we will get output only float representations
"""

a=float(input("enter the a value: "))
b=float(input("enter the b value: "))
c=a+b
if c==20:
  print("the value of:",c)
else:
  print("nothing:",a,b)
print("value of c:",c)
print("print the addition of two number:",a+b)
print("print the multiplication of two number:",a*b)
print("printed the sub of two numbers:",a-b)
print("divison of two variables:",a/b)#  #here a and b values of 10,2 quotient 5.0 gives that in the form 4.0
print("mouduls of two number",a%b)##there a and b values of 10,2 remainder is 0
print("floor division:",a//b)##here a and b values of 10,2 quotient 5 gives that not in the form flaot like 4,5,6

"""whenver you pass variable as a input is str it will perform addition because of concatenation remains will not understand we will not get output is concatenation"""

a=str(input("enter the a value: "))
b=str(input("enter the b value: "))
c=a+b
if c==20:
  print("the value of:",c)
else:
  print("nothing:",a,b)
print("value of c:",c)
print("print the addition of two number:",a+b)
print("print the multiplication of two number:",a*b)
print("printed the sub of two numbers:",a-b)
print("divison of two variables:",a/b)#  #here a and b values of 10,2 quotient 5.0 gives that in the form 4.0
print("mouduls of two number",a%b)##there a and b values of 10,2 remainder is 0
print("floor division:",a//b)##here a and b values of 10,2 quotient 5 gives that not in the form flaot like 4,5,6

"""only one single int variable then remaining all variables float output is the float representations"""

x=10

y=20.0
print(x+y)
print(type(a+b))

a=int(input("enter the a value: "))
b=float(input("enter the b value: "))
c=a+b
if c==20:
  print("the value of:",c)
else:
  print("nothing:",a,b)
print("value of c:",c)
print("print the addition of two number:",a+b)
print("print the multiplication of two number:",a*b)
print("printed the sub of two numbers:",a-b)
print("divison of two variables:",a/b)#  #here a and b values of 10,2 quotient 5.0 gives that in the form 4.0
print("mouduls of two number",a%b)##there a and b values of 10,2 remainder is 0
print("floor division:",a//b)##here a and b values of 10,2 quotient 5 gives that not in the form flaot like 4,5,619

Arithmetic Operators:
Addition(+): a + b
Subtraction(-): a - b
Multiplication(*): a * b
Division(/): a / b
Modulus(%): a % b
Floor division(//): a // b
Exponentiation(**): a ** b

a = 3 # a is a variable name and 3 is an integer data type
b = 2 # b is a variable name and 3 is an integer data type

# Arithmetic operations and assigning the result to a variable
total = a + b
diff = a - b
product = a * b
division = a / b
remainder = a % b
floor_division = a // b
exponential = a ** b

# I should have used sum instead of total but sum is a built-in function - try to avoid overriding built-in functions
print(total) # if you do not label your print with some string, you never know where the result is coming from
print('a + b = ', total)
print('a - b = ', diff)
print('a * b = ', product)
print('a / b = ', division)
print('a % b = ', remainder)
print('a // b = ', floor_division)
print('a ** b = ', exponential)

x=20.0

y=20
print(x+y)

"""assignment

whever work the floor 9//10 =10 like smallest/highest we can't perform=0.0 here means one thing notice highest//smallest gives the value

if you use the one float value and another one int results will be float
"""

x=5
x+=3
print("assigment add:",x)
x=x-3
print('assigment sub:',x)
x=x*5
print("assigment mul",x)
x=x/5
print("assigment of div:",+x)
x=x%5
print("assigment of mouduls",+x)
b=10
b=b//2
print("assign floor:",b)
x=x//6
print("asign floor:",x)
print(x//10)
print(20//10)
print(30//10.5)#10.5)30(2.0#one float divide it gives float output
print(30/10.0)
print(3/5) #important one over here
print(2/2) #all most important float
                     #21

# Calculating area of a circle
radius = 10                                 # radius of a circle
area_of_circle = 3.14 * radius ** 2         # two * sign means exponent or power
print('Area of a circle:', area_of_circle)

# Calculating area of a rectangle
length = 10
width = 20
area_of_rectangle = length * width
print('Area of rectangle:', area_of_rectangle)

# Calculating a weight of an object
mass = 75
gravity = 9.81
weight = mass * gravity
print(weight, 'N')
print(weight,'Np')    #i have right                    # Adding unit to the weight

# Calculate the density of a liquid
mass = 75 # in Kg
volume = 0.075 # in cubic meter
density = mass / volume # 1000 Kg/m^3
print(density)

"""comparsion operators in python output gives only True or false"""

a=int(input("ente the value: "))
b=int(input("enter the value: "))
print("a>b",a>b)
print("a==b",a==b)

print("a<b",a<b)
print("a!=b",a!=b)
print("a>=b",a>=b)
print("a<=b",a<=b)
print(3 > 2)     # True, because 3 is greater than 2
print(3 >= 2)    # True, because 3 is greater than 2
print(3 < 2)     # False,  because 3 is greater than 2
print(2 < 3)     # True, because 2 is less than 3
print(2 <= 3)    # True, because 2 is less than 3
print(3 == 2)    # False, because 3 is not equal to 2
print(3 != 2)    # True, because 3 is not equal to 2
print(len('mango') == len('avocado'))  # False
print(len('mango') != len('avocado'))  # True
print(len('mango') < len('avocado'))   # True
print(len('milk') != len('meat'))      # False
print(len('milk') == len('meat'))      # True
print(len('tomato') == len('potato'))  # True
print(len('python') > len('dragon'))   # False

"""basic comparsions just small things common sense from the comparsion operators"""

print('True == True: ', True == True) # true is true=true,1

print('True == False: ', True == False)#True and false =false ,0
print('False == False:', False == False) #false and =false ,o
print(10==10)
print(10==5)

"""logical

Unlike other programming languages python uses keywords and, or and not for logical operators. Logical operators are used to combine conditional statements:


"""



a=int(input("enter the value: "))
b=int(input("enter the value: "))
print("a>3 and b<10",a>3 and b<10) #if both conditions true it gives True
print("a==4 and b<2",a==4 and b<2)
print(a>=10 and b<=10)
#or
print(a>4 or b<10) #if any one condition is true it gives true
print(a>4 or b<0)
print(a>2 or b<20)
print(a>42 or b<10)
print(not  a>b)
print(a>b)
print('True' and 'True')
print('False' and 'True')
print('True' and 'False2')
print(not 'True')
print(not 'False2')

"""bitwise working for the bits & ,|,!"""

a=int(input("enter the value: "))
b=int(input("enter the value: "))
print(a|b
      )
print(a&b)
print(a^b)

print(20&21)
print(10&5)
print(10|5)
print(10^15)

"""membership operators

in: Returns True if the queried list contains a certain item(x in y)

not in: Returns True if the queried list doesn't have a certain item(x in y)
"""

#in

list=[2,3,4]
print(2 in list)
set={1,2,3}
print(5 in set)
set1={"apple","angel","accent"}
print("apple" in set1)
#not in
list1=[2,4,5,6]
print(7 not in list1)
print(2 not in list1)
print("apple" not in set1)

"""identify operators




is: Returns true if both variables are the same object(x is y)

is not: Returns true if both variables are not the same object(x is not y)

a=10,b=10 every variables hold the address of the variable just assume "a" address is 10000 but the"b" varibles just pointing the "a" variables address because we are using same data type

just
a adrress 1000
b address 1000
"""

a=10
b=10
print("a is b",a is b)
print(id(a))
print(id(b))

"""a=10,b='10'
a variables adress 1357027324400



a,b variables are not same data type
a,b variables different data types then address pointing different a,b variables


b varibles address 135709266004272
"""

a=10
b='10'
print(a is b)
print(id(a))
print(id(b))
print(id(a)==id(b))

"""is not"""



"""just checking variables same for the both variables

c is not d just operation perform

id is true
"""

c=20
d=20
print(c is not d)
print(id(c),id(d))
print(id(c)==id(d))



"""c,d variables different hold address diffrent"""

c=20
d='20'
print(c is not d)
print(id(c),id(d))
print(id(c)==id(d))

"""here set1,set2 values are same bit memory address varies
gives diffrent address


here the list have values check address same value like 2,2 gives the same address

"""

set1=(1,2,3)
set2=(1,2,3)
print(id(set1))
print(id(set2))
list=[2,2]
print(id(list[0]))
print(id(list[1]))
print(id(list[0]==id(list[1])))

a=int(input("enter the value: "))
b=int(input("enter the value: "))
c=a+b
jagan='reddy'
if c==10:
  print("value of sum",c)

elif jagan=='Reddy':
  print("name of the ",jagan)
else:
  print("nothing will printed")