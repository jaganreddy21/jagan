# -*- coding: utf-8 -*-
"""Copy of Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sXoxHDw4OKboY_phX0NckGfEBQlG0EeM
"""

def items(numbers):

  sum=0
  for x in numbers:
    sum=sum+x
  return sum
print(items([1,4,67]))

list=[1,4,67]
sum=0
list1=[]
for x in list:
  sum=x+sum
  list1.append(sum)
print(sum)
print(list1)

list2=[22,3,6,78]
list3=[]
mul=1
for x in list2:
  mul=mul*x
  list3.append(mul)
print(list3)

def multiply(numbers):
  list3=[]
  mul=1
  for x in list2:
    mul=mul*x
    list3.append(mul)
  return list3
print(multiply([1,5,7]))

"""reverse true means higher to lower numbers"""

def sort_elements(numbers):
  f=sorted(numbers,reverse=True)
  return f[0]
print(sort_elements([1,4,88,3,5,67,9900]))

"""reverse false lower number to highers numbers"""

def sort_elements(numbers):
  f=sorted(numbers,reverse=False)
  return f[-1]
print("largest element from the sort_elements",sort_elements([1,4,88,3,5,67,9900]))

numbers1=[2,5,17,8,8334]
number2=sorted(numbers1,reverse=True)
number3=sorted(numbers1,reverse=False)
print("largest element from the list",number2[0])
print("largets element from the number3 list",number3[-1])

"""4. Write a Python program to get the smallest number from a list."""

def smallest_element(list):
  smallest1=sorted(list)
  return smallest1[0]
print("samllest element from the list",smallest_element([1,5,6,902,62,790,0]))

list4=[2,4,6,100,0,2,5]
number4=sorted(list4)
print("smallest element from the list ",number4[0])

Write a Python program to count the number of strings from a given list of strings. The string length is 2 or more and the first and last characters are the same.
Sample List : ['abc', 'xyz', 'aba', '1221']

def count_of_string_length(number):
  count=0
  for x in number:
    if len(x)>2 and x[0]==x[-1]:
      count+=1
  return count
print(count_of_string_length(['abc', 'xyz', 'aba', '1221']))

"""Write a Python program to check if a list is empty or not."""

def checkemptylist(list):
  list4=[]
  if len(list)==0:
    print("list is empty")
  else:
    print("list non empyt",list)
    list4.append(list)


checkemptylist([22,5,67])
checkemptylist([])

def checkemptylist(list1):
  if len(list1)==0:
    return f"list is empty {list1}"
  else:
    return f"list is not empty {list1}"
print(checkemptylist([2,5,6]))
print(checkemptylist([]))
print(checkemptylist([22,3,5]))

"""Python: Remove duplicates from a list"""

def removeduplicatesvalues(list):

  for x in list:
    if list.count(x)>1:
      list.remove(x)
  print(list)
removeduplicatesvalues([22,45,45,67,8,6])

numbers=[1,2,56,56,78]
number2=sorted(set(numbers))
print(number2)

number5=[1,2,6,72,1,7,7]
list7=[]
for x in number5:
  if x not in list7:

    list7.append(x)
print("unique elements are",list7)

""" Write a Python program to clone or copy a list."""

# Create a list 'original_list' with some elements
original_list = [10, 22, 44, 23, 4]
#create copy list based upon the original list
new_list=list(original_list)
print(f"i have displaythe original list {original_list}")
print(f" copy list {new_list}")

def longerwords(n,str):
  txt=str.split(" ")
  word_len=[]

  for x in txt:
    if len(x)>n:
      word_len.append(x)
  return word_len
print(longerwords(3, "The quick brown fox jumps over the lazy dog"))

# Define a function called 'long_words' that takes an integer 'n' and a string 'str' as input
def long_words(n, str):
    # Create an empty list 'word_len' to store words longer than 'n' characters
    word_len = []

    # Split the input string 'str' into a list of words using space as the delimiter
    txt = str.split(" ")

    # Iterate through each word 'x' in the list of words 'txt'
    for x in txt:
        # Check if the length of the current word 'x' is greater than 'n'
        if len(x) > n:
            # If the word is longer than 'n' characters, add it to the 'word_len' list
            word_len.append(x)

    # Return the list of words longer than 'n' characters
    return word_len

# Call the 'long_words' function with an 'n' value of 3 and a string as input, and print the result
print(long_words(3, "The quick brown fox jumps over the lazy dog"))

word="The quick brown fox jumps over the lazy dog"
words=word.split(" ")
n=3
word1=[]
print(words)
for x in words:

  if len(x)>n:
    word1.append(x)
print(word1)

"""12. Write a Python program to print a specified list after removing the 0th, 4th and 5th elements.
Sample List : ['Red', 'Green', 'White', 'Black', 'Pink', 'Yellow']
Expected Output : ['Green', 'White', 'Black']

if you want printed based 0,4,5 elements
"""

list=['Red','Green','White','Black','Pink','Yellow']
list1=[]
for x in list:
  if list.index(x)==1 or list.index(x)==3 or list.index(x)==2:
    list1.append(x)
print(list1)

def list(items):
  new_list=[]
  for i in items:
    if(items.index(i)!=0 and items.index(i)!=4 and items.index(i)!=5):
      new_list.append(i)
  return new_list
print(list(['Red','Green','White','Black','Pink','Yellow']))

list=['Red','Green','White','Black','Pink','Yellow']
list2=[]
for x in list:
  if list.index(x) not in(0,4,5):
    list2.append(x)
print(list2)

list=['Red','Green','White','Black','Pink','Yellow']
list.pop(0)
list.pop(4)
list.pop()
print(list)

list=['Red','Green','White','Black','Pink','Yellow']
list.remove('Red')
list.remove('Pink')
list.remove('Yellow')
print(list)

list=['Red','Green','White','Black','Pink','Yellow']
del list[0]
del list[4]
del list[5]
print(list)

list=['Red','Green','White','Black','Pink','Yellow']

list2=[list[1],list[2],list[3]]
print(list2)

def deleteitems(list):
  del list[5]
  del list[4]
  del list[0]
  return list
print(deleteitems(['Red','Green','White','Black','Pink','Yellow']))

lst1 = ['Red', 'Green', 'White', 'Black', 'Pink', 'Yellow']
print(lst1[1:4])

li=[2,3,4,5,6,7]
li2=[4,5,6,8,9]
print("true" if (len(set(li)&set(li2)))>0 else 'false')
if set(li)&set(li2):
  print("common elements")
else:
  print("not commom elements")

def lists(list1,list2):
  result=False
  for x in list1:
    for y in list2:
      if x==y:
        result=True
        return True

print(lists([1,4,5,6],[34,6,8,0]))

def check_member(list1,list2):
  for i in list1:
    if i in list2:
      print(True)
      break
li=[2,3,4,5,6,7]
li2=[4,5,6,8,9]



"""set in & is the intesection we will get common values from the both lists"""

li=[2,3,4,5,6,7]
li2=[4,5,6,8,9]
if set(li)&set(li2):
  print('yes')
print()

"""any in inbuilt functions"""

li=[2,3,4,5,6,7]
li2=[4,5,6,8,9]
if any(x in li for x in li2):
  print('True')

"""Write a Python program to print the numbers of a specified list after removing even numbers from it."""

def evenlistdelete(*list):
  cx=[x for x in list if x%2!=1]
  return cx
print(evenlistdelete(22,4,56,7))

number=[22,10,7,8,90,0,26,78,98]
number2=[]
for x in number:
  if x%2!=1:

    number2.append(x)
print(number2)

def oddnumber(item):
  item1=[]
  for x in item:
    if x%2!=1:
      item1.append(x)
  return item1
print(oddnumber([1,5,6,80]))
print(oddnumber([10,20,23,45,67,80]))
print("to remove the even number to printed only the",oddnumber([1,5,6,7,89,34,56]))

print([x for x in [22,6,7,8945,67,78,90] if x%2!=0])

"""5. Write a Python program to shuffle and print a specified list. or random we will get it within a list"""

import random
number=[2,3,5,67,8]
print(random.shuffle(number))

"""set will gives order does not preserved"""

number=["green","black","white","dark"]
print(list(set(number)))

import random

number=["green","black","white","dark"]
random.shuffle(number)
print(number)

def random_number(number1):
  random.shuffle(number1)
  return number1
print(random_number([1,3,6,7829])

def color(number):
  random.shuffle(number)
  return number
print(color(['Red', 'Green', 'White', 'Black', 'Pink', 'Yellow']))

"""Write a Python program to generate and print a list of the first and

last 5 elements where the values are square numbers between 1 and 30

 (both included).
"""

def numberfirstlastsquare():
  items3=list()

  for x in range(1,31):
    items3.append(x**2)
  print(items3[:5])
  print(items3[-5:])
numberfirstlastsquare()

square=[x*x for x in range(1,21)]
square2=[x*x for x in range(1,31)]
print(square)
print("to the printed first and last squares number ",square[:5]+square[-5:])
print("first five numbers square are ",square[:5])
print("last five number suarees are",square[-5:])
print(square2)
print("first of the five number suares",square[:5])
print("last five number of the squares",square[-5:])
print("first of the five number suares",square2[:5])
print("last five number of the squares",square2[-5:])

def primenumber1(number1):
  result=[is_prime_number(i) for i in number1]
  return all(result)
def is_prime_number(number):
  if number<=1:
    return False
  elif (number==2):
    return True;
  else:
    for x in range(2,number):
      if(number% x==0):
        return False

    return True
print(primenumber1([0, 3, 4, 7, 9]))
print(primenumber1([3, 5, 7, 13]))
print(primenumber1([1, 5, 3]))

def test(nums):
    result = [is_prime(i) for i in nums]
    return all(result)

def is_prime(n):
    if (n==1):
        return False
    elif (n==2):
        return True;
    else:
        for x in range(2,n):
            if(n % x==0):
                return False
        return True

nums = [0, 3, 4, 7, 9]
print("Original list of numbers:")
print(nums)
print("Check if each number is prime in the said list of numbers:")
print(test(nums))
nums = [3, 5, 7, 13]
print("\nOriginal list of numbers:")
print(nums)
print("Check if each number is prime in the said list of numbers:")
print(test(nums))
nums = [1, 5, 3]
print("\nOriginal list of numbers:")
print(nums)
print("Check if each number is prime in the said list of numbers:")
print(test(nums))

def primenumber1(number1):
    result = [is_prime_number(i) for i in number1]
    return all(result)

def is_prime_number(number):
    if number <= 1:
        return False
    elif number == 2:
        return True
    else:
        for x in range(2, number):
            if number % x == 0:
                return False
        return True

print(primenumber1([0, 3, 4, 7, 9]))
print(primenumber1([3, 5, 7, 13]))

def is_prime_number(number):
  if number<=1:
    return False
  elif number==2:
    return True
  else:
    for x in range(2,number):
      if number%2==0:
        return False
    return True
print(is_prime_number(3))
print(is_prime_number(14))
print(is_prime_number(7))

"""9. Write a Python program to calculate the difference between the two lists."""

def difference_list(list1,list2):
  list3=list(set(list1)-set(list2))
  list4=list(set(list2)-set(list1))
  list5=list3+list4
  print(list5)
difference_list([1, 3, 5, 7, 9],[1, 2, 4, 6, 7, 8])

def difference_between_2_lists(list1, list2):
  correlation1 = [item for item in list1 if item not in list2]
  correlation2 = [item for item in list2 if item not in list1]
  return correlation1 + correlation2

list1 = [1,2,3,4,5,6]
list2 = [1,2,3,4,5,6,7]

difference_between_2_lists(list1, list2)

def difference_between_number(list1,list2):
  list3=[]
  for x in list1:
    if x not in list2:
      list3.append(x)
  for y in list2:
    if y not in list1:
      list3.append(y)
  return list3

result=difference_between_number([1,2,5,6,10],[10,3,67])
print(result)

list1 = [1, 3, 5, 7, 9]
list2=[1, 2, 4, 6, 7, 8]

diff=[]
for x in list1:
  if x not in list2:
    diff.append(x)

for y  in list2:
  if y not in list1:
    diff.append(y)

print(diff)

"""Write a Python program to access the index of a list."""

numbers=[1,4,5,6,89]
for x in numbers:
  print(x,numbers.index(x))

"""Write a Python program to convert a list of characters into a string."""

s=['j','a','g','a','n']
''.join(s)

p=['m','o','h']
''.join(p)

"""Write a Python program to find the index of an item in a specified list."""

list=[2,2,3,4,5]
print(list.index(2))

list=['jagan','python','java','insert']
find='insert'
for x in range(0,len(list)):

  if list[x]==find:
    print(x)

list=[10,30,40,-6]
find=30
for x in range(0,len(list)):
  if list[x]==find:
    print(x)

num=[43,24,9,12]
find=9
for x in range(0,len(num)):
  if num[x]==find:
    print("index is 9:",x)

def specified_index(number,n):
  for x in number:
    if x==n:
      print(x,number.index(x))
specified_index([2,4,5,6,7],2)
specified_index([43,24,9,12],9)
specified_index([10,30,40,-6],30)

def specified_index(number,n):
  for x in number:
    if x==n:
      print(x,number.index(x))
specified_index([2,4,5,6,7],2)
specified_index([43,24,9,12],9)
specified_index([10,30,40,-6],30)

def specified_index(lst, target):
    try:
        index = lst.index(target)
        return index
    except ValueError:
        return f"{target} not found in the list"

# Example usage
print(specified_index([2,4,5,6,7],2))
print(specified_index([43,24,9,12],9))
print(specified_index([10,30,40,-6],30))

""". Write a Python program to append a list to the second list."""

list=[1,2,5,6]
list.extend([5,9,0])
print(list)

list=[2,4,56]
list2=list+[2,4,6]
print(list2)

import random
jagan=[22,4,5,6,7]
print(random.choice(jagan))

list1=[10,20,46]
list2=[10,29,90]
list3=[10,29,90]
b=sorted(list1)
c=sorted(list2)
d=sorted(list3)
print(b,c)
if b==c:
  print("b and c True")
elif c==d:
  print("c and d TRUE")
elif d==b:
  print("d and b True")
else:
  print("false")

def symetric_elements(list1,list2):
  a=sorted(list1)
  b=sorted(list2)
  if a==b:
    return True
  else:
    return False
print(symetric_elements([1,5,8,19],[3,6,78]))

def symetric_elements(list1,list2):
  a=sorted(list1)
  b=sorted(list2)
  if a==b:
    return True
  else:
    return False
print(symetric_elements([1,2,3],[1,2,3]))

def find_smallest(lst):
    if not lst:
        return None  # Return None for an empty list

    smallest = lst[0]
      # Assume the first element is the smallest

    for element in lst[1:]:
        if element < smallest:
            smallest = element

    return smallest

# Example usage:
my_list = [10, 30, 40, -6, 5, 15]
result = find_smallest(my_list)

print(f"The smallest element is: {result}")

def smallest_value(number):
  smallest_element=number[0]
  for x in number:
    if x<smallest_element:
      smallest_element=x
  return smallest_element
print(smallest_value([1,4,5,8,-1]))
print("small element in the givien number ",smallest_value([22,10,57,90]))

data=[1,25,6,8]
for x in data:
  if x==6:
    print(x)


    break
else:
  print("to list values",x)
for y in data:
  if y==25:
    break
else:
  print("congrats")

data=[1,25,6,8]
for x in data:
  if x==10:
    print(x)
    break

for y in data:
  if y==25:

    print(y)
    break
else:
  print("congrats")

"""up to range 33"""

def number(n):
  return n*n
n=34
result=list(map(number,range(34)))
print(result)

def number(n):
    return n * n

n = 34
result = list(map(number, [n]))
print(result)

"""prime n"""

def smallet_number(n):
  minimum=n[0]
  for element in n:
    if minimum<element:
      element=minimum
  return minimum
print(smalle)

"""33. Write a Python program to generate all sublists of a lis"""

def sublist(a):
  for i in a:
    if type(i) == type(a):
      return True

a = [1,2,3,4,[5,6,3],7,8]
print(sublist(a))

list=[23,4,6,7]
list2

lst=[1,4,5,6,[0,7]]
print(bool(True if isinstance(i,lst) else False for i in lst))

list5=[1,2,4[4,5,6]]
count=0
if len(list)>0:
  count=count

list7=[1,2,4]
list8=[1,2]
if ''join(map(str,list7)) in ''join(map(str,list8))):
  print('1')
else:
  print('0')

a=[2,4,3,5,7]
c=[3,7]
b=[4,3]

if ''.join(map(str,b)) in ''.join(map(str,a)):
  print('true')
else:
  print('false')

a=[2,4,3,5,7]
c=[3,7]
b=[4,3]

if ''.join(map(str,a)) in ''.join(map(str,c)):
  print('true')
else:
  print('false')

"""Write a Python program to create a list by concatenating a given list with a range from 1 to n.
Sample list : ['p', 'q']
n =5
Sample Output : ['p1', 'q1', 'p2', 'q2', 'p3', 'q3', 'p4', 'q4', 'p5', 'q5']
"""

list=['p','q']
n=5
c=[]
for x in list:
  if x in m and x in n:
    c.append(x)

list=['p','q']
n=5
c=[]
for x in list:
  for able in range(1,n+1):

list=['p','q']
n=5
c=[]
for x in range(1,n+1):
  for x1 in list:
    c.append(str[x]+x1)

"""Write a Python program to change the position of every n-th value to the (n+1)th in a list.
Sample list: [0,1,2,3,4,5]
Expected Output: [1, 0, 3, 2, 5, 4]
"""

L1 = [11, 33, 50,20,230,2]
B=''.join(map(str,L1))
print(B)



"""43. Write a Python program to split a list into different variables."""

L2=[22,5,6,7]
combined=''
for x in L2:
  combined=combined+str(x)
print(combined)

"""4. Write a Python program to generate groups of five consecutive numbers in a list."""

